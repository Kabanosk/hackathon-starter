name: Build and test web application and database
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run docker compose and wait until web server is up
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          echo "DB_HOST=$DB_HOST" > .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASS=$DB_PASS" >> .env
          docker-compose build
  test-api:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Up the container
        run: |
          docker-compose up -d
          # Wait for PostgreSQL to be ready
          timeout 60 bash -c 'until docker exec hackathon-starter_db_1 pg_isready; do sleep 1; done'

          # Additional wait for application to be ready (replace port 8000 with your application's port)
          timeout 60 bash -c 'until echo > /dev/tcp/localhost/8000; do sleep 1; done'
      - name: Run tests
        run: pytest tests/api.py

  test-database:
    needs: test-api
    runs-on: ubuntu-latest
    steps:
      - name: Up the container
        run: |
          docker-compose up -d
          # Wait for PostgreSQL to be ready
          timeout 60 bash -c 'until docker exec hackathon-starter_db_1 pg_isready; do sleep 1; done'

          # Additional wait for application to be ready (replace port 8000 with your application's port)
          timeout 60 bash -c 'until echo > /dev/tcp/localhost/8000; do sleep 1; done'
      - name: Run tests
        run: docker-compose exec hackathon-starter_web_1 pytest tests/database.py

  cleanup:
    needs: [test-api, test-database]
    runs-on: ubuntu-latest
    steps:
      - name: Stop and remove container
        run: docker-compose down
